# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- feat/*

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  workingDirectory: goal-keeper
  displayName: 'npm install and build'

  # https://medium.com/@chgian77/execute-react-tests-with-azure-devops-6b95212f4160
# - script:
#     npm test -- --coverage --ci --reporters=default --reporters=jest-unit --coverageReporters=cobertura
#   workingDirectory: goal-keeper
#   displayName: 'test'
#   env:
#     CI: true

# This works, but try to do it in 2 steps
# - script:
#     npm run test:coverage
#   workingDirectory: goal-keeper
#   displayName: 'Run unit tests - Release & create code coverage report'
#   env:
#     CI: true

- script:
    npm run test:coverage
  workingDirectory: goal-keeper
  displayName: 'Run unit tests - Release'
  env:
    CI: true

- script:
    ls -a
  workingDirectory: goal-keeper
  displayName: 'What is in the folder?'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: 'coverage/cobertura-coverage.xml'

- task: CopyFiles@2
  displayName: 'Copy the build files to $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: 'goal-keeper/build/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
  inputs: 
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: 'www'
